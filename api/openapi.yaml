openapi: 3.0.0
info:
  title: i-connect
  description: "This is the documentation of i-connect, a course project of CMPUT\
    \ 404 at University of Alberta.  The document is implemented by swagger ui and\
    \ swagger editor which are under Apache-2.0 License. See detail about swagger\
    \ and its License below"
  termsOfService: http://swagger.io/terms/
  contact:
    email: xichen3@ualberta.ca
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://i-connect.herokuapp.com/service
tags:
- name: post
  description: Post object related
- name: author
  description: Author object related
- name: comment
  description: Comment object related
- name: likes
  description: Like object to post and comment
- name: liked
  description: Liked object of one author
- name: follow
  description: "follow, friend related"
- name: inbox
  description: inbox related
paths:
  /authors/{AUTHOR_ID}/posts/{POST_ID}/:
    get:
      tags:
      - post
      summary: Get the public post using the post's id and the author's id
      operationId: getPostByPostIdAndAuthorId
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: POST_ID
        in: path
        description: ID of post to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        "404":
          description: Cannot find author or post
      x-swagger-router-controller: Post
    put:
      tags:
      - post
      summary: Create a post with provided post_id
      operationId: createAPost
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: POST_ID
        in: path
        description: ID of post to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: Pet object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      responses:
        "200":
          description: Post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        "400":
          description: "Bad request, see error message"
        "404":
          description: Author not found
      x-swagger-router-controller: Post
    post:
      tags:
      - post
      summary: Update the post using the post's id and the author's id(not finished)
      description: must be authenticated
      operationId: updatePostByPostIdAndAuthorId
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: POST_ID
        in: path
        description: ID of post to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: Pet object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        "400":
          description: "Bad request, see error message"
        "403":
          description: You are not allowed to create this post
        "404":
          description: Cannot find author or post
      x-swagger-router-controller: Post
    delete:
      tags:
      - post
      summary: Delete a post by post and author id
      operationId: deletePost
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: POST_ID
        in: path
        description: ID of post to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: Post deleted
        "403":
          description: You are not allowed to delete this post
        "404":
          description: Author/Post not found
      x-swagger-router-controller: Post
  /author/{AUTHOR_ID}/post/:
    get:
      tags:
      - post
      summary: Get one author's all posts
      operationId: getAuthorRecentPosts
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Post found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        "404":
          description: Author/Post not found
      x-swagger-router-controller: Post
    post:
      tags:
      - post
      summary: Create a post and generate id by backend itself
      operationId: createAPostAndGenerateId
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author of the post
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: Post object that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      responses:
        "200":
          description: Post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        "403":
          description: You are not allowed to create this post
        "404":
          description: Author not found
      x-swagger-router-controller: Post
  /posts/:
    get:
      tags:
      - post
      summary: Get all public posts
      operationId: postsGET
      responses:
        "200":
          description: Posts found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
      x-swagger-router-controller: Post
  /author/{AUTHOR_ID}/:
    get:
      tags:
      - author
      summary: Get a author object by provided author_id
      operationId: getAuthorByAutherId
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Author found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
        "404":
          description: Author not found
      x-swagger-router-controller: Author
    post:
      tags:
      - author
      summary: Update a author object by provided author_id
      operationId: updateAuthorByAutherId
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: Update author object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        "200":
          description: Author found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
        "404":
          description: Author not found
      x-swagger-router-controller: Author
  /authors/:
    get:
      tags:
      - author
      summary: Get all authors
      operationId: authorsGET
      responses:
        "200":
          description: All authors found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authors'
      x-swagger-router-controller: Author
  /users/signup/:
    post:
      tags:
      - author
      summary: Sign up a user
      operationId: usersSignupPOST
      requestBody:
        description: Create a author object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpAuthor'
      responses:
        "200":
          description: Author created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
        "400":
          description: Username already taken
      x-swagger-router-controller: Author
  /users/login/:
    post:
      tags:
      - author
      summary: Login up a user
      operationId: usersLoginPOST
      requestBody:
        description: Update author object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        "200":
          description: Author created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
        "401":
          description: Invalid credential
      x-swagger-router-controller: Author
  /author/{AUTHOR_ID}/posts/{POST_ID}/comments:
    get:
      tags:
      - comment
      summary: Get comments of the post by provided author and post id
      operationId: createCommentByProvidedUserAndPost
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of the post's author
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: POST_ID
        in: path
        description: ID of the post
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Comments found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentArray'
        "404":
          description: Author/Post/Comment not found
      x-swagger-router-controller: Comment
    post:
      tags:
      - comment
      summary: Create a comments of the post by provided author and post id
      operationId: authorAUTHOR_IDPostsPOST_IDCommentsPOST
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: POST_ID
        in: path
        description: Pet object that needs to be added to the store
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: Comment object that needs to be added to the post
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        "201":
          description: Comment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        "404":
          description: Author/Post/ not found
      x-swagger-router-controller: Comment
  /authors/{AUTHOR_ID}/posts/{POST_ID}/likes/:
    get:
      tags:
      - likes
      summary: Get likes of the post by provided author and post id
      description: GET a list of likes from other authors on author_id’s post post_id
      operationId: getLikesOfAPostByProvidedAuthorAndPostId
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of the post's author
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: POST_ID
        in: path
        description: ID of the post
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Likes found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLikeArray'
        "404":
          description: Author/Post not found
      x-swagger-router-controller: Likes
  /author/{AUTHOR_ID}/post/{POST_ID}/comments/{COMMENT_ID}/likes/:
    get:
      tags:
      - likes
      summary: Get likes of the post by provided author and post id
      description: GET a list of likes from other authors on author_id’s post post_id
      operationId: getLikesOfAPostOfACommentByProvidedAuthorAndPostId
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of the post's author
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: POST_ID
        in: path
        description: ID of the post
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: COMMENT_ID
        in: path
        description: ID of the comment
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Likes found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentLikeArray'
        "404":
          description: Author/Post/Comment not found
      x-swagger-router-controller: Likes
  /author/{AUTHOR_ID}/liked/:
    get:
      tags:
      - liked
      summary: GET list what public things author_id liked
      operationId: authorAUTHOR_IDLikedGET
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author who liked
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Liked list found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Liked'
      x-swagger-router-controller: Liked
  /author/{AUTHOR_ID}/followers/:
    get:
      tags:
      - follow
      summary: GET list of follower of the provided author
      operationId: authorAUTHOR_IDFollowersGET
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author who has followers
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Liked list found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Liked'
        "400":
          description: See error message
      x-swagger-router-controller: Follow
  /author/{AUTHOR_ID}/followers/{FOREIGN_AUTHOR_ID}/:
    get:
      tags:
      - follow
      summary: check if follower
      operationId: authorAUTHOR_IDFollowersFOREIGN_AUTHOR_IDGET
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author who is followee
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: FOREIGN_AUTHOR_ID
        in: path
        description: ID of author who is follower
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Authors found
          content:
            application/json:
              schema:
                x-content-type: application/json
        "404":
          description: Author not found
      x-swagger-router-controller: Follow
    put:
      tags:
      - follow
      summary: Add a follower
      operationId: authorAUTHOR_IDFollowersFOREIGN_AUTHOR_IDPUT
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author who is followee
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: FOREIGN_AUTHOR_ID
        in: path
        description: ID of author who is follower
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "201":
          description: Follower added
          content:
            application/json:
              schema:
                x-content-type: application/json
        "404":
          description: Author not found
      x-swagger-router-controller: Follow
    delete:
      tags:
      - follow
      summary: Delete a follower
      operationId: authorAUTHOR_IDFollowersFOREIGN_AUTHOR_IDDELETE
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author who is followee
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: FOREIGN_AUTHOR_ID
        in: path
        description: ID of author who is follower
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: Follower deleted
          content:
            application/json:
              schema:
                x-content-type: application/json
        "404":
          description: Author not found
      x-swagger-router-controller: Follow
  /author/{AUTHOR_ID}/inbox/:
    get:
      tags:
      - inbox
      summary: "Get a list of shared posts sent to {AUTHOR_ID}"
      operationId: getInboxByAuthorId
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Inbox found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inbox'
        "400":
          description: See error message
        "404":
          description: Author not found
      x-swagger-router-controller: Inbox
    post:
      tags:
      - inbox
      summary: Save a post/follow/like
      operationId: addItemToInboxByAuthorId
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: Comment object that needs to be added to the post
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendPost'
      responses:
        "201":
          description: Inbox item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inbox'
        "400":
          description: invalid input
        "404":
          description: Author not found
      x-swagger-router-controller: Inbox
    delete:
      tags:
      - inbox
      summary: "Delete a post/follow/like to {AUTHOR_ID}'s inbox"
      operationId: deleteItemsInInboxByAuthorId
      parameters:
      - name: AUTHOR_ID
        in: path
        description: ID of author to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: Inbox item deleted
        "400":
          description: invalid input
        "404":
          description: Author not found
      x-swagger-router-controller: Inbox
components:
  schemas:
    Post:
      type: object
      properties:
        type:
          type: string
          example: post
        title:
          type: string
          description: title of a post
          example: this is a title
        id:
          type: string
          format: uuid
        author:
          $ref: '#/components/schemas/Author'
        published:
          type: string
          format: date-time
        visibility:
          type: string
          enum:
          - PUBLIC
          - FRIENDS
          - PRIVATE
          - SERVERONLY
        content:
          type: string
          description: content of the post
          example: aaaaabbbbbbcccc
      example:
        visibility: PUBLIC
        author:
          github_name: this is github name
          user_name: this is user name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: author
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        published: 2000-01-23T04:56:07.000+00:00
        type: post
        title: this is a title
        content: aaaaabbbbbbcccc
    Author:
      type: object
      properties:
        type:
          type: string
          example: author
        id:
          type: string
          format: uuid
        user_name:
          type: string
          example: this is user name
        github_name:
          type: string
          example: this is github name
      example:
        github_name: this is github name
        user_name: this is user name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: author
      xml:
        name: Order
    Authors:
      type: array
      items:
        $ref: '#/components/schemas/Author'
    SignUpAuthor:
      type: object
      properties:
        type:
          type: string
          example: author
        id:
          type: string
          format: uuid
        user_name:
          type: string
          example: this is user name
        github_name:
          type: string
          example: this is github name
        password:
          type: string
          example: this is password
      xml:
        name: Order
    LoginUser:
      type: object
      properties:
        user_name:
          type: string
          example: this is user name
        password:
          type: string
          example: this is password
      xml:
        name: Order
    Comment:
      type: object
      properties:
        type:
          type: string
          example: comment
        author:
          $ref: '#/components/schemas/Author'
        comment:
          type: string
          description: comment's content
          example: this is comment content
        contentType:
          type: string
          example: text
        published:
          type: string
          example: ”2015-03-09T13:07:04+00:00”
        id:
          type: string
          format: uuid
      example:
        author:
          github_name: this is github name
          user_name: this is user name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: author
        comment: this is comment content
        published: ”2015-03-09T13:07:04+00:00”
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: comment
        contentType: text
    CommentArray:
      type: object
      properties:
        type:
          type: string
          example: comments
        id:
          type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
      example:
        comments:
        - author:
            github_name: this is github name
            user_name: this is user name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: author
          comment: this is comment content
          published: ”2015-03-09T13:07:04+00:00”
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: comment
          contentType: text
        - author:
            github_name: this is github name
            user_name: this is user name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: author
          comment: this is comment content
          published: ”2015-03-09T13:07:04+00:00”
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: comment
          contentType: text
        id: id
        type: comments
    PostLike:
      type: object
      properties:
        type:
          type: string
          example: Like
        author:
          $ref: '#/components/schemas/Author'
        post:
          $ref: '#/components/schemas/Post'
        comment:
          type: object
          nullable: true
        summary:
          type: string
          example: summary string
        id:
          type: string
          format: uuid
      example:
        summary: summary string
        post:
          visibility: PUBLIC
          author:
            github_name: this is github name
            user_name: this is user name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: author
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          published: 2000-01-23T04:56:07.000+00:00
          type: post
          title: this is a title
          content: aaaaabbbbbbcccc
        author:
          github_name: this is github name
          user_name: this is user name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: author
        comment: {}
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: Like
    CommentLike:
      type: object
      properties:
        type:
          type: string
          example: Like
        author:
          $ref: '#/components/schemas/Author'
        post:
          $ref: '#/components/schemas/Post'
        comment:
          $ref: '#/components/schemas/Comment'
        summary:
          type: string
          example: summary string
        id:
          type: string
          format: uuid
      example:
        summary: summary string
        post:
          visibility: PUBLIC
          author:
            github_name: this is github name
            user_name: this is user name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: author
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          published: 2000-01-23T04:56:07.000+00:00
          type: post
          title: this is a title
          content: aaaaabbbbbbcccc
        author:
          github_name: this is github name
          user_name: this is user name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: author
        comment:
          author:
            github_name: this is github name
            user_name: this is user name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: author
          comment: this is comment content
          published: ”2015-03-09T13:07:04+00:00”
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: comment
          contentType: text
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: Like
    PostLikeArray:
      type: object
      properties:
        type:
          type: string
          example: Likes
        post:
          type: string
          format: uuid
        likes:
          type: array
          items:
            $ref: '#/components/schemas/PostLike'
      example:
        post: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: Likes
        likes:
        - summary: summary string
          post:
            visibility: PUBLIC
            author:
              github_name: this is github name
              user_name: this is user name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: author
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            published: 2000-01-23T04:56:07.000+00:00
            type: post
            title: this is a title
            content: aaaaabbbbbbcccc
          author:
            github_name: this is github name
            user_name: this is user name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: author
          comment: {}
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: Like
        - summary: summary string
          post:
            visibility: PUBLIC
            author:
              github_name: this is github name
              user_name: this is user name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: author
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            published: 2000-01-23T04:56:07.000+00:00
            type: post
            title: this is a title
            content: aaaaabbbbbbcccc
          author:
            github_name: this is github name
            user_name: this is user name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: author
          comment: {}
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: Like
    CommentLikeArray:
      type: object
      properties:
        type:
          type: string
          example: Likes
        comment:
          type: string
          format: uuid
        likes:
          type: array
          items:
            $ref: '#/components/schemas/CommentLike'
      example:
        comment: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: Likes
        likes:
        - summary: summary string
          post:
            visibility: PUBLIC
            author:
              github_name: this is github name
              user_name: this is user name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: author
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            published: 2000-01-23T04:56:07.000+00:00
            type: post
            title: this is a title
            content: aaaaabbbbbbcccc
          author:
            github_name: this is github name
            user_name: this is user name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: author
          comment:
            author:
              github_name: this is github name
              user_name: this is user name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: author
            comment: this is comment content
            published: ”2015-03-09T13:07:04+00:00”
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: comment
            contentType: text
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: Like
        - summary: summary string
          post:
            visibility: PUBLIC
            author:
              github_name: this is github name
              user_name: this is user name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: author
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            published: 2000-01-23T04:56:07.000+00:00
            type: post
            title: this is a title
            content: aaaaabbbbbbcccc
          author:
            github_name: this is github name
            user_name: this is user name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: author
          comment:
            author:
              github_name: this is github name
              user_name: this is user name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: author
            comment: this is comment content
            published: ”2015-03-09T13:07:04+00:00”
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: comment
            contentType: text
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: Like
    Liked:
      type: object
      properties:
        type:
          type: string
          example: liked
        items:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/CommentLike'
            - $ref: '#/components/schemas/PostLike'
      example:
        type: liked
        items:
        - ""
        - ""
    Inbox:
      type: object
      properties:
        type:
          type: string
          example: inbox
        author:
          type: string
          format: uuid
        items:
          type: array
          items:
            $ref: '#/components/schemas/FriendPost'
      example:
        author: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: inbox
        items:
        - visibility: FRIENDS
          author:
            github_name: this is github name
            user_name: this is user name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: author
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          published: 2000-01-23T04:56:07.000+00:00
          type: post
          title: this is a title
          content: aaaaabbbbbbcccc
        - visibility: FRIENDS
          author:
            github_name: this is github name
            user_name: this is user name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: author
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          published: 2000-01-23T04:56:07.000+00:00
          type: post
          title: this is a title
          content: aaaaabbbbbbcccc
    FriendPost:
      type: object
      properties:
        type:
          type: string
          example: post
        title:
          type: string
          description: title of a post
          example: this is a title
        id:
          type: string
          format: uuid
        author:
          $ref: '#/components/schemas/Author'
        published:
          type: string
          format: date-time
        visibility:
          type: string
          example: FRIENDS
          enum:
          - PUBLIC
          - FRIENDS
          - PRIVATE
          - SERVERONLY
        content:
          type: string
          description: content of the post
          example: aaaaabbbbbbcccc
      example:
        visibility: FRIENDS
        author:
          github_name: this is github name
          user_name: this is user name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: author
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        published: 2000-01-23T04:56:07.000+00:00
        type: post
        title: this is a title
        content: aaaaabbbbbbcccc
